import "Slice";

// From the C standard library:
func malloc(size: uint) -> ~mut u8;
func realloc(ptr: ~mut u8, size: uint) -> ~mut u8;
func free(ptr: ~mut u8);

namespace Std;

/// Allocates a block of memory with the requested size.
///
/// # Safety
/// - The provided *size* should not be zero.
/// - The returned memory block must be freed with `Std.Free` to prevent memory leaks.
export func Std.Alloc(size: uint) -> []mut u8 {
    return malloc(size)[0..size];
}

/// Reallocates a block of memory to the requested size (in bytes).  The requested size may be
/// smaller than the current size.
///
/// # Safety
/// - The provided memory block must have been allocated with `Std.Alloc` or `Std.Realloc`.
/// - The provided *size* should not be zero.
/// - The returned memory block must be freed with `Std.Free` to prevent memory leaks.
/// - The provided memory block should not be used after it is reallocated, and the block that the
///   function returns should be used instead.
export func Std.Realloc(ptr: []mut u8, size: uint) -> []mut u8 {
    return realloc(ptr as ~mut u8, size)[0..size];
}

/// Reallocates a block of memory with the requested size.
///
/// # Safety
/// - The provided memory block must have been allocated with `Std.Alloc` or `Std.Realloc`.
export func Std.Free(ptr: []mut u8) {
    free(ptr as ~mut u8);
}