namespace Std;

func SliceLen(slice: []const u8) -> uint;
func SliceAsPtr(slice: []const u8) -> ~mut u8;
func SliceFromPtr(slice: ~const u8, len: uint) -> []mut u8;

/// Returns the number of items in the provided slice.
export func Std.SliceLen(slice: []const u8) -> uint {
    return SliceLen(slice);
}

/// Converts a slice to a pointer.
///
/// NOTE: will be removed in future versions in favor of the `as` operator.
export func Std.SliceAsPtr(slice: []const u8) -> ~const u8 {
    return SliceAsPtr(slice);
}

/// Converts a slice to a mutable pointer.
///
/// NOTE: will be removed in future versions in favor of the `as` operator.
export func Std.SliceAsPtrMut(slice: []mut u8) -> ~mut u8 {
    return SliceAsPtr(slice);
}

/// Creates a slice from the provided pointer value and length.
///
/// NOTE: will be removed in future versions in favor of `ptr[0..len]`.
export func Std.SliceFromPtr(ptr: ~const u8, len: uint) -> []const u8 {
    return SliceFromPtr(ptr, len);
}

/// Creates a mutable slice from the provided pointer value and length.
///
/// NOTE: will be removed in future versions in favor of `ptr[0..len]`.
export func Std.SliceFromPtrMut(ptr: ~mut u8, len: uint) -> []mut u8 {
    return SliceFromPtr(ptr, len);
}